"""
Report generation tool for creating technical and financial reports
"""
from pathlib import Path
from typing import Dict, Any
from datetime import datetime
from docx import Document
from utils.config import get_report_path, get_pdf_path
from utils.file_utils import docx_to_pdf, ensure_directory

def create_technical_report(project_data: Dict[str, Any], model_name: str, technical_analysis: str) -> Path:
    """Create a technical report in DOCX format"""
    filepath = get_report_path(model_name, "technical")
    ensure_directory(filepath.parent)
    
    doc = Document()
    doc.add_heading("Technical Project Report", 0)
    doc.add_paragraph(f"Generated by {model_name.upper()}")
    doc.add_paragraph(f"Date: {datetime.now().strftime('%B %d, %Y')}")
    
    doc.add_heading("Technical Analysis", level=1)
    doc.add_paragraph(technical_analysis)
    
    doc.save(filepath)
    return filepath

def create_financial_report(project_data: Dict[str, Any], model_name: str, cost_analysis: str, cost_breakdown: Dict[str, Any]) -> Path:
    """Create a financial report in DOCX format"""
    filepath = get_report_path(model_name, "financial")
    ensure_directory(filepath.parent)
    
    doc = Document()
    doc.add_heading("Financial Project Report", 0)
    doc.add_paragraph(f"Generated by {model_name.upper()}")
    doc.add_paragraph(f"Date: {datetime.now().strftime('%B %d, %Y')}")
    
    doc.add_heading("Cost Analysis", level=1)
    doc.add_paragraph(cost_analysis)
    
    doc.save(filepath)
    return filepath